function [Jacobian,Jac_grid] = spline_distortion_Jac_Int(sp,X,gridsize)
% sp: spline object generated by spmak
% X: 2*n2*... array
% outputs:
% Jacobian: 1*N
if nargin < 3
    gridsize=[10,10];
end
X = reshape(X,2,[]);
kx = unique(sp.knots{1});
gX = refine_grid(kx,gridsize(1));
ky = unique(sp.knots{2});
gY = refine_grid(ky,gridsize(2));
[~,~,~,cX,cY] = histcounts2(X(1,:),X(2,:),gX,gY);
Jac_grid = get_jac_grid(sp,gX,gY);
ind = sub2ind(size(Jac_grid),cX,cY);
Jacobian = Jac_grid(ind);


end

function xx=refine_grid(x,s)
n = numel(x);
xx = zeros(1,(n-1)*(s-1)+n);
a = (0:s)/s;
for ii = 1:(n-1)
    d = (x(ii+1)-x(ii));
    xx(1+(ii-1)*s : 1+(ii)*(s)) = x(ii) + d*a;
end
end

function Jac_grid = get_jac_grid(sp,gX,gY)
m = numel(gX);
n = numel(gY);
dx = diff(gX);
dy = diff(gY);
x0 = gX(1:end-1);
y0 = gY(1:end-1);
Jac_grid = zeros(n-1,m-1);
% Gauss quadrature for [0,1]
w = [5/18,8/18,5/18];
p = (1+[-sqrt(3/5),0,sqrt(3/5)])/2;
for i = 1:3
    for j = 1:3
        ww = w(i)*w(j);
        [X,Y] = meshgrid(x0+ p(i)*dx,y0+p(j)*dy);
        J = spline_distortion_Jac(sp,[reshape(X,1,[]);reshape(Y,1,[])]);
        J = reshape(J,size(Jac_grid));
        Jac_grid = Jac_grid + ww * J;
        
    end
end
Jac_grid = Jac_grid';
        

end